{"ast":null,"code":"var _jsxFileName = \"/Users/Soham/target1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Newuser from './Components/Newuser';\nimport Welcome from './Components/Welcome';\nimport classes from './App.module.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport SplitPage from './Components/SplitPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mystatus, setStatus] = useState(false);\n  const [toggle, setToggle] = useState(true);\n  useEffect(() => {\n    if (window.navigator.onLine === true) {\n      setStatus(true);\n    } else if (window.navigator.onLine === false) {\n      setStatus(false);\n    }\n  }, []);\n\n  const handleToggle = () => {\n    setToggle(!toggle);\n  };\n\n  toggle ? document.body.style.backgroundColor = \"black\" : document.body.style.backgroundColor = \"white\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: toggle ? classes.darkmode : classes.lightmode,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggle,\n      children: toggle ? \"Light Mode\" : \"Dark Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: mystatus ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(SplitPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/newuser\",\n            children: /*#__PURE__*/_jsxDEV(Newuser, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./img1.jpg\",\n        alt: \"no internet connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 2\n  }, this);\n}\n\n_s(App, \"/RtIwsBtHukEuRfiWJwBK8ZphjI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Soham/target1/src/App.js"],"names":["React","useState","useEffect","Newuser","Welcome","classes","BrowserRouter","Router","Route","Switch","SplitPage","App","mystatus","setStatus","toggle","setToggle","window","navigator","onLine","handleToggle","document","body","style","backgroundColor","darkmode","lightmode"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAqB,kBAArB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAgCC,KAAhC,EAAsCC,MAAtC,QAAmD,kBAAnD;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAKA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,QAAD,EAAUC,SAAV,IAAqBZ,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAK,CAACa,MAAD,EAAQC,SAAR,IAAmBd,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGc,MAAM,CAACC,SAAP,CAAiBC,MAAjB,KAA0B,IAA7B,EACA;AACEL,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAHD,MAIK,IAAGG,MAAM,CAACC,SAAP,CAAiBC,MAAjB,KAA0B,KAA7B,EAAmC;AACtCL,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,GARQ,EAQP,EARO,CAAT;;AAWD,QAAMM,YAAY,GAAC,MAAI;AACtBJ,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACA,GAFD;;AAIAA,EAAAA,MAAM,GAACM,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,OAArC,GAA6CH,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,OAAvF;AACD,sBACD;AAAK,IAAA,SAAS,EAAET,MAAM,GAACT,OAAO,CAACmB,QAAT,GAAkBnB,OAAO,CAACoB,SAAhD;AAAA,4BACG;AAAQ,MAAA,OAAO,EAAEN,YAAjB;AAAA,gBAAgCL,MAAM,GAAC,YAAD,GAAc;AAApD;AAAA;AAAA;AAAA;AAAA,YADH,eAEE,QAAC,MAAD;AAAA,gBACGF,QAAQ,gBAAC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACT,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAA,mCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAA,mCACA,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAA,mCACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADS;AAAA;AAAA;AAAA;AAAA,cAAD,gBAaH;AAAK,QAAA,GAAG,EAAC,YAAT;AAAsB,QAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AAdR;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADC;AAsBD;;GA1CQD,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport Newuser from './Components/Newuser'\nimport Welcome from './Components/Welcome'\nimport classes from  './App.module.css'\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\nimport SplitPage from './Components/SplitPage';\n\n\n\n\nfunction App() {\n    const [mystatus,setStatus]=useState(false);\n    const[toggle,setToggle]=useState(true);\n\n    useEffect(()=>{\n      if(window.navigator.onLine===true)\n      {\n        setStatus(true);\n      }\n      else if(window.navigator.onLine===false){\n        setStatus(false);\n      }\n    },[])\n\n    \n   const handleToggle=()=>{\n    setToggle(!toggle)\n   }\n\n   toggle?document.body.style.backgroundColor=\"black\":document.body.style.backgroundColor=\"white\";\n  return (\n <div className={toggle?classes.darkmode:classes.lightmode}>\n    <button onClick={handleToggle}>{toggle?\"Light Mode\":\"Dark Mode\"}</button>    \n   <Router>\n     {mystatus?<div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Welcome/>\n        </Route>\n        <Route path=\"/login\">\n        <SplitPage/>\n        </Route>\n        <Route path=\"/newuser\">\n        <Newuser/>\n        </Route>\n      \n      </Switch>\n    </div>:<img src=\"./img1.jpg\" alt=\"no internet connection\"/>}\n    \n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}