{"ast":null,"code":"var _jsxFileName = \"/Users/Soham/target1/src/Components/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm(); // const submit=submission=>console.log(submission);\n\n  function handleEmail(event) {\n    event.preventDefault();\n    let value1 = event.target.value;\n    return setEmail(value1);\n  }\n\n  function handlePassword(event) {\n    event.preventDefault();\n    let value2 = event.target.value;\n    return setPassword(value2);\n  }\n\n  function handleClick(event) {\n    let finalEmail = email;\n    let finalPassword = password;\n    return console.log(finalEmail, finalPassword);\n  }\n\n  const history = useHistory();\n\n  function login() {\n    history.push('/newuser');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register('email', {\n          required: {\n            value: true,\n            message: \"Enter a email address\"\n          },\n          pattern: {\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n            message: \"Invalid email address\"\n          }\n        }),\n        onChange: handleEmail,\n        placeholder: \"Enter your email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errors.email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        ...register('password', {\n          required: {\n            value: true,\n            message: \"Enter a password\"\n          },\n          minLength: {\n            value: 8,\n            message: \"Length should be of min 8 characters \"\n          },\n          validate: value => {\n            return [/[a-z]/, /[A-Z]/, /[0-9]/, /[^a-zA-Z0-9]/].every(pattern => pattern.test(value)) || \"Password must include lower, upper, number, and special chars\";\n          }\n        }),\n        onChange: handlePassword,\n        placeholder: \"Enter your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errors.password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleSubmit(handleClick),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Login, \"TA7aZ6bSsCCMKh0dq8PzSJPS7xE=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/Soham/target1/src/Components/Login.jsx"],"names":["React","useState","useForm","Link","Redirect","useHistory","Login","email","setEmail","password","setPassword","register","handleSubmit","formState","errors","handleEmail","event","preventDefault","value1","target","value","handlePassword","value2","handleClick","finalEmail","finalPassword","console","log","history","login","push","required","message","pattern","minLength","validate","every","test"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\nimport {useForm} from \"react-hook-form\";\nimport {Link, Redirect , useHistory} from 'react-router-dom';\n\nfunction Login()\n{\n    const [email,setEmail]=useState();\n    const [password,setPassword]=useState();\n\n    const{register,handleSubmit,formState:{errors}}=useForm()\n    // const submit=submission=>console.log(submission);\n\n   \n\n    function handleEmail(event)\n    {   \n        event.preventDefault()\n       let value1=event.target.value;\n        return(setEmail(value1));\n    }\n\n    function handlePassword(event)\n    {\n        event.preventDefault()\n        let value2=event.target.value;\n        return(setPassword(value2));\n    }\n\n    function handleClick(event)\n    {\n     let finalEmail=email;   \n     let finalPassword=password;\n     return(console.log(finalEmail,finalPassword));\n    }\n\n    const history=useHistory();\n\nfunction login()\n{\n    history.push('/newuser');\n}\n   return(<div>\n       <form>\n       <br/>\n       <br/>    \n      {/* <button type=\"submit\"><Link to=\"/newuser\">Register</Link></button>      */}\n      <button type=\"submit\" onClick={login}></button>\n      <br/>\n      <br/>\n      <br/>\n      <h1>Login</h1>\n      <input type=\"text\" {...register('email',{required:{value:true,message:\"Enter a email address\"},pattern: {value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,message: \"Invalid email address\"}})}onChange={handleEmail} placeholder=\"Enter your email address\"/>\n      <br/>\n      {errors.email && (<span>{errors.email.message}</span>)}\n      <br/>\n      <br/>\n      <input type=\"password\" {...register('password',{required:{value:true,message:\"Enter a password\"},minLength:{value:8,message:\"Length should be of min 8 characters \"},validate: (value) => {return (\n            [/[a-z]/, /[A-Z]/, /[0-9]/, /[^a-zA-Z0-9]/].every((pattern) =>\n              pattern.test(value)\n            ) || \"Password must include lower, upper, number, and special chars\"\n          );\n        }})} onChange={handlePassword} placeholder=\"Enter your password\"/>\n      <br/>\n      {errors.password && (<span>{errors.password.message}</span>)}\n      <br/>\n      <br/>\n      <button type=\"submit\" onClick={handleSubmit(handleClick)} >Login</button>\n      </form>\n   </div>); \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}