{"ast":null,"code":"var _jsxFileName = \"/Users/Soham/target1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Newuser from './Components/Newuser';\nimport Welcome from './Components/Welcome';\nimport classes from './App.module.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport SplitPage from './Components/SplitPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mystatus, setStatus] = useState(false);\n  const [toggle, setToggle] = useState(true);\n  useEffect(() => {\n    if (window.navigator.onLine === true) {\n      setStatus(true);\n      window.location.reload();\n    } else if (window.navigator.onLine === false) {\n      setStatus(false);\n      window.location.reload();\n    }\n  }, [window.navigator.onLine]);\n\n  const handleToggle = () => {\n    setToggle(!toggle);\n  };\n\n  useEffect(() => {\n    document.body.style.backgroundColor = toggle ? \"black\" : \"White\";\n  }, [toggle]);\n\n  const renderDiv = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: toggle ? classes.darkmode : classes.lightmode,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToggle,\n        children: toggle ? \"Light Mode\" : \"Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: mystatus ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              children: /*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              children: /*#__PURE__*/_jsxDEV(SplitPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/newuser\",\n              children: /*#__PURE__*/_jsxDEV(Newuser, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 18\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./img1.jpg\",\n          alt: \"no internet connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderNoInternet = () => {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No internet connection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this);\n  };\n\n  return mystatus ? renderDiv() : renderNoInternet();\n}\n\n_s(App, \"Yj/0MUIU+G+Ih38wIeaD+7x0WPc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Soham/target1/src/App.js"],"names":["React","useState","useEffect","Newuser","Welcome","classes","BrowserRouter","Router","Route","Switch","SplitPage","App","mystatus","setStatus","toggle","setToggle","window","navigator","onLine","location","reload","handleToggle","document","body","style","backgroundColor","renderDiv","darkmode","lightmode","renderNoInternet"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport Newuser from './Components/Newuser'\nimport Welcome from './Components/Welcome'\nimport classes from  './App.module.css'\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\nimport SplitPage from './Components/SplitPage';\n\n\n\n\nfunction App() {\n\n    const [mystatus,setStatus]=useState(false);\n    const[toggle,setToggle]=useState(true);\n\n    useEffect(()=>{\n      if(window.navigator.onLine===true)\n      {\n        setStatus(true);\n        window.location.reload()\n        \n      }\n      else if(window.navigator.onLine===false){\n        setStatus(false);\n        window.location.reload()\n      }\n     \n\n    },[window.navigator.onLine])\n\n    \n   const handleToggle=()=>{\n    setToggle(!toggle)\n   }\n\n   useEffect(()=>{\n    document.body.style.backgroundColor=toggle?\"black\":\"White\";\n   },[toggle])\n\n\n   const renderDiv=()=>{\n     return(<div className={toggle?classes.darkmode:classes.lightmode}>\n      <button onClick={handleToggle}>{toggle?\"Light Mode\":\"Dark Mode\"}</button>    \n     <Router>\n       {mystatus?<div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Welcome/>\n          </Route>\n          <Route path=\"/login\">\n          <SplitPage/>\n          </Route>\n          <Route path=\"/newuser\">\n          <Newuser/>\n          </Route>\n        \n        </Switch>\n      </div>:<img src=\"./img1.jpg\" alt=\"no internet connection\"/>}\n      \n      </Router>\n      </div>)\n   }\n\n   const renderNoInternet=()=>{\n   return(<h1>No internet connection</h1>)\n   }\n\n   return(\n     mystatus?renderDiv():renderNoInternet()\n   )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}