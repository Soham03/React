{"ast":null,"code":"var _jsxFileName = \"/Users/Soham/target1/src/Components/SplitPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Loggedin from './Loggedin';\nimport Login from './Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SplitPage = () => {\n  _s();\n\n  const [login, setlogin] = useState(0);\n  let isLoggedIn = JSON.parse(localStorage.getItem(\"isLoggedIn\"));\n  useEffect(() => {\n    setlogin(isLoggedIn);\n  }, [isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: login ? /*#__PURE__*/_jsxDEV(Loggedin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SplitPage, \"3GmgU7fkG5UeQoMfL026dyJBl98=\");\n\n_c = SplitPage;\nexport default SplitPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SplitPage\");","map":{"version":3,"sources":["/Users/Soham/target1/src/Components/SplitPage.jsx"],"names":["React","useState","useEffect","Loggedin","Login","SplitPage","login","setlogin","isLoggedIn","JSON","parse","localStorage","getItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAkBN,QAAQ,CAAC,CAAD,CAAhC;AACA,MAAIO,UAAU,GAACC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAf;AACAV,EAAAA,SAAS,CAAC,MAAI;AACdK,IAAAA,QAAQ,CAACC,UAAD,CAAR;AACC,GAFQ,EAEP,CAACA,UAAD,CAFO,CAAT;AAIA,sBACI;AAAA,cACKF,KAAK,gBAAC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAAD,gBAAa,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAZD;;GAAMD,S;;KAAAA,S;AAcN,eAAeA,SAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport Loggedin from './Loggedin'\nimport Login from './Login'\nconst SplitPage = () => {\n    const [login,setlogin] =useState(0)\n    let isLoggedIn=JSON.parse(localStorage.getItem(\"isLoggedIn\"));\n    useEffect(()=>{\n    setlogin(isLoggedIn)\n    },[isLoggedIn])\n   \n    return (\n        <div>\n            {login?<Loggedin/>:<Login/> }\n        </div>\n    )\n}\n\nexport default SplitPage\n"]},"metadata":{},"sourceType":"module"}